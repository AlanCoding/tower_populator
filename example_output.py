import tower-cli

user_res = tower_cli.get_resource("user")
team_res = tower_cli.get_resource("team")
organization_res = tower_cli.get_resource("organization")
inventory_res = tower_cli.get_resource("inventory")
host_res = tower_cli.get_resource("host")
group_res = tower_cli.get_resource("group")
project_res = tower_cli.get_resource("project")
job_template_res = tower_cli.get_resource("job_template")
credential_res = tower_cli.get_resource("credential")
job_res = tower_cli.get_resource("job")

organization_res.create(name=Default)
organization_res.create(name="Hyrule Ventures",description="Mining Rupees Daily")
team_res.create(name=Ops,organization=Default,description="The Ops Team")
team_res.create(name=QA,organization=Default,description="Assures quality of software")
team_res.create(name=Dev,organization=Default,description="Develops software")
organization_res.create(name="Bio Inc",description="Medical services")
team_res.create(name="Tech Services",organization="Bio Inc",description="Helps customers with problems")
team_res.create(name=Engineering,organization="Bio Inc",description="Does tech things")
project_res.create(name="Hyrulian Playbooks",description="Configures all the servers in Hyrule.",scm_type=git,scm_url=https://github.com/jsmartin/tower-demo-example-simple,organization="Hyrule Ventures")
project_res.create(name="Ansible Examples",description="Some example roles and playbooks",scm_type=git,scm_url=https://github.com/ansible/ansible-examples)
project_res.create(name=sample_playbooks,organization=Default,scm_type=git,scm_url=https://github.com/AlanCoding/permission-testing-playbooks.git)
organization_res.associate_project(organization="Bio Inc",project=sample_playbooks)
organization_res.disassociate_project(organization="Bio Inc",project=sample_playbooks)
organization_res.associate_project(organization="Hyrule Ventures",project=sample_playbooks)
user_res.create(username=link,password=password,email="asdf@asdf.com",first_name=Link,last_name=Smith)
organization_res.associate(organization="Hyrule Ventures",user=link)
team_res.associate(team=Ops,user=link)
user_res.create(username=gdorf,password=password,email="asdf@asdf.com",first_name=Geoff,last_name=Smith)
organization_res.associate(organization="Hyrule Ventures",user=gdorf)
team_res.associate(team=QA,user=gdorf)
user_res.create(username=zelda,password=password,email="asdf@asdf.com",first_name=Zelda,last_name=Smith)
organization_res.associate(organization="Hyrule Ventures",user=zelda)
team_res.associate(team=Dev,user=zelda)
user_res.create(username=sherlock,password=password,email="asdf@asdf.com",first_name=Sherlock,last_name=Holmes)
organization_res.associate(organization="Bio Inc",user=sherlock)
team_res.associate(team="Tech Services",user=sherlock)
user_res.create(username=jack,password=password,email="asdf@asdf.com",first_name=Jack,last_name=Black)
organization_res.associate(organization="Bio Inc",user=jack)
team_res.associate(team=Engineering,user=jack)
user_res.create(username=rshinra,password=password,email="asdf4@asdf.com",first_name=Rufus,last_name=Shinra)
organization_res.associate(organization="Bio Inc",user=rshinra)
organization_res.disassociate(organization="Bio Inc",user=rshinra)
credential_res.create(name="EC2 SSH",description="Used for EC2 instances",team=Ops,kind=ssh,username=root,ssh_key_data=~/.ssh/id_rsa)
credential_res.create(name="Local SSH",description="Used for vagrant instances",team=Ops,kind=ssh,username=vagrant,ssh_key_data=insecure_private_key)
credential_res.create(name="AWS creds",team=Ops,kind=aws,username=your_username,password=canthandle1234)
credential_res.create(name="RAX creds",description="Used for Rackspace",team=Ops,kind=rax,username=me,password=noyoucant)
credential_res.create(name=user1,username=user1,password=password,team=Engineering,kind=ssh,become_method=su,become_username=user2,become_password=pass1)
credential_res.create(name=user2,username=user2,password=pass1,team=Engineering,kind=ssh,become_method=su,become_username=user1,become_password=password)
inventory_res.create(name=localhost,description="local machine",organization=Default,variables=variables.yml)
host_res.create(name=127.0.0.1,description="the host in localhost",inventory=localhost,variables=variables.yml)
inventory_res.create(name=Production,description="Production Machines",organization="Hyrule Ventures",variables=variables.yml)
group_res.create(name=EC2,credential="AWS creds",source=ec2,description="EC2 hosts",inventory=Production)
group_res.create(name=RAX,credential="RAX creds",source=rax,description="RAX hosts",inventory=Production)
group_res.create(name=EC2vars,credential="AWS creds",source=ec2,description="EC2 hosts",inventory=Production,source_regions=us-east-1,overwrite=true,overwrite_vars=false,source_vars="foo: bar")
inventory_res.create(name=Testing,description="Test Machines",organization="Bio Inc",variables=variables.yml)
group_res.create(name=web,source=manual,inventory=Testing,variables=variables.yml)
host_res.create(name=10.42.0.6,inventory=Testing)
host_res.create(name=10.42.0.7,inventory=Testing)
host_res.create(name=10.42.0.8,inventory=Testing)
host_res.create(name=10.42.0.9,inventory=Testing)
host_res.create(name=10.42.0.10,inventory=Testing)
inventory_res.create(name=QA,description="QA Machines",organization=Default,variables=variables.yml)
group_res.create(name=databases,source=manual,inventory=QA,variables=variables.yml)
group_res.create(name="web servers",source=manual,inventory=QA,variables=variables.yml)
host_res.create(name=server.example1.com,inventory=QA)
host_res.associate(host=server.example1.com,group="web servers")
host_res.create(name=server.example2.com,inventory=QA)
host_res.associate(host=server.example2.com,group="web servers")
job_template_res.create(name="Hello World Debug",description="debug statement",inventory=localhost,machine_credential=user1,project=sample_playbooks,playbook=debug.yml)
job_template_res.create(name="Hello World",description="echo statement",inventory=localhost,machine_credential=user1,project=sample_playbooks,playbook=helloworld.yml)
job_template_res.create(name="Hello World as user2",description="echo statement with user2 credentials",inventory=localhost,machine_credential=user2,project=sample_playbooks,playbook=helloworld.yml)
job_template_res.create(name=Apache,description="Confgure Apache servers",inventory=Testing,project="Hyrulian Playbooks",playbook=site.yml,machine_credential="Local SSH",job_type=run,verbosity=verbose,forks=5)
job_res.launch(job_template="Hello World Debug",job_explanation="launched by example script")
job_res.status(job_template="Hello World Debug")
job_res.cancel(job_template="Hello World Debug")
job_res.launch(job_template="Hello World Debug",job_explanation="launched by example script")
job_res.list(job_template="Hello World Debug")
